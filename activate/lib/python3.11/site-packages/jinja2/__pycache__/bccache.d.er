##[pylyzer] failed /home/ether/Desktop/testingThings/realstate/activate/lib/python3.11/site-packages/jinja2/bccache.py 1753141474 14061

.errno: Never

.fnmatch: Never

.marshal: Never

.os: Never

.pickle: Never

.stat: Never

.sys: Never

.tempfile: Never

.t: Never

.___v_desugar_1: Never
.sha1: Never
.___v_desugar_2: Never
.BytesIO: Never
.___v_desugar_3: Never
.CodeType: Never

.te = pyimport "typing_extensions"
.typing_extensions = pyimport "typing_extensions"

.___v_desugar_4 = pyimport "environment"
.environment = pyimport "environment"
.Environment: Never
.Type__MemcachedClient: ClassType
.Type__MemcachedClient <: Never
.Type__MemcachedClient.get: (self: bccache.Type__MemcachedClient, key: Str) -> global::Bytes
.Type__MemcachedClient.GenericSet: Never



.bc_version: {5}
.bc_magic: Never
.Bucket: ClassType

.BytecodeCache: ClassType
.BytecodeCache.__call__: () -> bccache.BytecodeCache
.BytecodeCache.load_bytecode: (self: bccache.BytecodeCache, bucket: Obj) -> NoneType
.BytecodeCache.dump_bytecode: (self: bccache.BytecodeCache, bucket: Obj) -> NoneType
.BytecodeCache.clear: (self: bccache.BytecodeCache) -> NoneType
.BytecodeCache.get_cache_key: (self: bccache.BytecodeCache, name: Str, filename: Obj := Obj) -> Str
.BytecodeCache.get_source_checksum: (self: bccache.BytecodeCache, source: Str) -> Str
.BytecodeCache.get_bucket: (self: bccache.BytecodeCache, environment: Obj, name: Str, filename: Obj, source: Str) -> Never
.BytecodeCache.set_bucket: (self: bccache.BytecodeCache, bucket: Obj) -> NoneType

.FileSystemBytecodeCache: ClassType
bccache = pyimport "bccache"
.FileSystemBytecodeCache <: .BytecodeCache
.FileSystemBytecodeCache.pattern: Str
.FileSystemBytecodeCache.directory: Never
.FileSystemBytecodeCache.__call__: (directory: Obj := Obj, pattern: Str := Str) -> bccache.FileSystemBytecodeCache
.FileSystemBytecodeCache._get_default_cache_dir: (self: bccache.FileSystemBytecodeCache) -> Str
.FileSystemBytecodeCache._get_cache_filename: (self: bccache.FileSystemBytecodeCache, bucket: Obj) -> Str
.FileSystemBytecodeCache.load_bytecode: (self: bccache.FileSystemBytecodeCache, bucket: Obj) -> NoneType
.FileSystemBytecodeCache.dump_bytecode: (self: bccache.FileSystemBytecodeCache, bucket: Obj) -> NoneType
.FileSystemBytecodeCache.clear: (self: bccache.FileSystemBytecodeCache) -> NoneType

.MemcachedBytecodeCache: ClassType
.MemcachedBytecodeCache <: .BytecodeCache
.MemcachedBytecodeCache.__call__: (client: Obj, prefix: Str := Str, timeout: Obj := Obj, ignore_memcache_errors: Bool := Bool) -> bccache.MemcachedBytecodeCache
.MemcachedBytecodeCache.load_bytecode: (self: bccache.MemcachedBytecodeCache, bucket: Obj) -> NoneType
.MemcachedBytecodeCache.dump_bytecode: (self: bccache.MemcachedBytecodeCache, bucket: Obj) -> NoneType

