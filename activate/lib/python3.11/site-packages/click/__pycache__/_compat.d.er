##[pylyzer] failed /home/ether/Desktop/testingThings/realstate/activate/lib/python3.11/site-packages/click/_compat.py 1753141474 18693
.___v_desugar_1: Never
.annotations: Never
.codecs: Never

.cabc: Never

.io: Never

.os: Never

.re: Never

.sys: Never

.t: Never

.___v_desugar_2 = pyimport "types"
.types = pyimport "types"
.TracebackType: Never
.___v_desugar_3: Never
.WeakKeyDictionary: Never
.CYGWIN: Never
.WIN: Never
.auto_wrap_for_ansi: NoneType
._ansi_re: Never
._make_text_stream: (stream: Obj, encoding: NoneType or Str, errors: NoneType or Str, force_readable: Bool := Bool, force_writable: Bool := Bool) -> Never
.is_ascii_encoding: (encoding: Str) -> Bool
.get_best_encoding: (stream: Obj) -> Str
._NonClosingTextIOWrapper: ClassType

._FixupStream: ClassType

._is_binary_reader: (stream: global::Readable!, default: Bool := Bool) -> Bool
._is_binary_writer: (stream: global::Writable!, default: Bool := Bool) -> Bool
._find_binary_reader: (stream: global::Readable!) -> Never
._find_binary_writer: (stream: global::Writable!) -> Never
._stream_is_misconfigured: (stream: Obj) -> Bool
._is_compat_stream_attr: (stream: Obj, attr: Str, value: NoneType or Str) -> Bool
._is_compatible_text_stream: (stream: Obj, encoding: NoneType or Str, errors: NoneType or Str) -> Bool
._force_correct_text_stream: |Type_21690: Type|(text_stream: Type_21690, encoding: NoneType or Str, errors: NoneType or Str, is_binary: (Type_21690, {False}) -> Bool, find_binary: (Type_21690) -> Never, force_readable: Bool := {False} and Bool, force_writable: Bool := {False} and Bool) -> Never
._force_correct_text_reader: (text_reader: global::Readable!, encoding: NoneType or Str, errors: NoneType or Str, force_readable: Bool := Bool) -> Never
._force_correct_text_writer: (text_writer: global::Writable!, encoding: NoneType or Str, errors: NoneType or Str, force_writable: Bool := Bool) -> Never
.get_binary_stdin: () -> Never
.get_binary_stdout: () -> Never
.get_binary_stderr: () -> Never
.get_text_stdin: (encoding: NoneType or Str := NoneType or Str, errors: NoneType or Str := NoneType or Str) -> Never
.get_text_stdout: (encoding: NoneType or Str := NoneType or Str, errors: NoneType or Str := NoneType or Str) -> Never
.get_text_stderr: (encoding: NoneType or Str := NoneType or Str, errors: NoneType or Str := NoneType or Str) -> Never
._wrap_io_open: (file: Int or Str, mode: Str, encoding: NoneType or Str, errors: NoneType or Str) -> global::File!
.open_stream: (filename: Obj, mode: Str := Str, encoding: NoneType or Str := NoneType or Str, errors: NoneType or Str := NoneType or Str, atomic: Bool := Bool) -> global::Tuple([Never, Bool])
._AtomicFile: ClassType

.strip_ansi: (value: Str) -> Str
._is_jupyter_kernel_output: (stream: Obj) -> Bool
.should_strip_ansi: (stream: Obj := Obj, color: NoneType or Bool := NoneType or Bool) -> Bool

.___v_desugar_4 = pyimport "_winconsole"
._winconsole = pyimport "_winconsole"
._get_windows_console_stream: (f: Obj, encoding: NoneType or Str, errors: NoneType or Str) -> Never
._get_argv_encoding: () -> Str
._ansi_stream_wrappers: Never
.auto_wrap_for_ansi: Never





.term_len: (x: Str) -> Int
.isatty: |Type_24352: Type, Type_21826 <: Structural({.isatty = (self: Obj) -> ?24352})|(stream: Type_21826) -> Bool
._make_cached_stream_func: (src_func: () -> Never, wrapper_func: () -> Never) -> () -> Never
._default_text_stdin: Never
._default_text_stdout: Never
._default_text_stderr: Never
.binary_streams: Never
.text_streams: Never
