##[pylyzer] failed /home/ether/Desktop/testingThings/realstate/activate/lib/python3.11/site-packages/requests/sessions.py 1753128601 30495

.os: Never

.sys: Never

.time: Never

.___v_desugar_1: Never
.OrderedDict: Never
.___v_desugar_2: Never
.timedelta: Never
.___v_desugar_3 = pyimport "_internal_utils"
._internal_utils = pyimport "_internal_utils"
.to_native_string: (string: global::Bytes, encoding: Str := Str) -> Str
.___v_desugar_4 = pyimport "adapters"
.adapters = pyimport "adapters"
.HTTPAdapter: {adapters.HTTPAdapter}
.___v_desugar_5 = pyimport "auth"
.auth = pyimport "auth"
._basic_auth_str: Never
.___v_desugar_6 = pyimport "compat"
.compat = pyimport "compat"
.Mapping: Never
.cookielib: Never
.urljoin: Never
.urlparse: Never
.___v_desugar_7 = pyimport "cookies"
.cookies = pyimport "cookies"
.RequestsCookieJar: {cookies.RequestsCookieJar}
.cookiejar_from_dict: |Type_27076 <: cookies.RequestsCookieJar|(cookie_dict: Obj, cookiejar: Type_27076 := Type_27076, overwrite: Structural({.__or__ = (self: Never, Obj) -> Bool}) := {True} and Structural({.__or__ = (self: Never, Obj) -> Bool})) -> Type_27076
.extract_cookies_to_jar: |Type_27309: Type, Type_27311: Type, Type_26949 <: Structural({.extract_cookies = (self: Obj, ?27309, ?27310) -> ?27311}), Type_27310: Type|(jar: Type_26949, request: Obj, response: Structural({._original_response = Never})) -> Type_27311
.merge_cookies: |Type_27076 <: cookies.RequestsCookieJar|(cookiejar: Type_27076, cookies: Obj) -> Type_27076
.___v_desugar_8 = pyimport "exceptions"
.exceptions = pyimport "exceptions"
.ChunkedEncodingError: {exceptions.ChunkedEncodingError}
.ContentDecodingError: {exceptions.ContentDecodingError}
.InvalidSchema: {exceptions.InvalidSchema}
.TooManyRedirects: {exceptions.TooManyRedirects}
.___v_desugar_9 = pyimport "hooks"
.hooks = pyimport "hooks"
.default_hooks: () -> global::Dict!({Never: Never})
.dispatch_hook: |Type_15085 :> {Type_v_global_38990: Obj | Type_v_global_38990 != None}, R: Type, O <: Structural({.__or__ = (self: Never, ?R) -> ?O}), O: Type|(key: Obj, hooks: O, hook_data: Type_15085, **kwargs := Obj) -> Type_15085
.___v_desugar_10 = pyimport "models"
.models = pyimport "models"
.DEFAULT_REDIRECT_LIMIT: Never
.REDIRECT_STATI: Never
.PreparedRequest: Never
.Request: Never
.___v_desugar_11 = pyimport "status_codes"
.status_codes = pyimport "status_codes"
structures = pyimport "structures"
.codes: structures.LookupDict
.___v_desugar_12 = pyimport "structures"

.CaseInsensitiveDict: {structures.CaseInsensitiveDict}
.___v_desugar_13 = pyimport "utils"
.utils = pyimport "utils"
.DEFAULT_PORTS: Never
.default_headers: Never
.get_auth_from_url: Never
.get_environ_proxies: Never
.get_netrc_auth: Never
.requote_uri: Never
.resolve_proxies: Never
.rewind_body: Never
.should_bypass_proxies: Never
.to_key_val_list: Never

.preferred_clock: Never

.preferred_clock: Never


.merge_setting: ||Never
.merge_hooks: ||Never
.SessionRedirectMixin: ClassType
.SessionRedirectMixin.__call__: () -> sessions.SessionRedirectMixin
.SessionRedirectMixin.get_redirect_target: |Type_30450 <: Structural({.is_redirect = ?31101; .headers = ?Self}), Type_31101 <: Bool, K: Type, Self <: global::Indexable(?K, ?V), V: Type|(self: sessions.SessionRedirectMixin, resp: Type_30450) -> {None}
.SessionRedirectMixin.should_strip_auth: (self: sessions.SessionRedirectMixin, old_url: Obj, new_url: Obj) -> Bool
.SessionRedirectMixin.resolve_redirects: |Type_31522 :> {False}|(self: sessions.Session, resp: Never, req: Structural({.url = Ref(Obj); .copy = (self: Obj) -> sessions.Session}), stream: Type_31522 := {False} and Type_31522, timeout: Type_31522 := {None} and Type_31522, verify: Type_31522 := {True} and Type_31522, cert: Type_31522 := {None} and Type_31522, proxies: Type_31522 := {None} and Type_31522, yield_requests: Bool := {False} and Bool, **adapter_kwargs := Obj) -> NoneType
.SessionRedirectMixin.rebuild_auth: |Type_30454: Type, T: Type, Type_31476: Type, Type_30474 <: Structural({.url = ?Type_30454; .prepare_auth = (self: Obj, ?31503) -> ?T; .headers = ?31476}), Type_31503: Type|(self: sessions.Session, prepared_request: Type_30474, response: Never) -> NoneType
.SessionRedirectMixin.rebuild_proxies: |Type_30477 <: Structural({.url = ?31533; .headers = ?31532}), Type_31532: Type, Type_31533 <: Ref(Obj), Type_31522 :> {False}|(self: sessions.Session, prepared_request: Type_30477, proxies: Type_31522) -> Type_31522
.SessionRedirectMixin.rebuild_method: |E: Type, Type_31591 <: Structural({.is_redirect = ?Type_31101; .url = ?31342 and ?31364; .history = ?31250 and ?31322; .content = ?31316; .raw = ?31317 and ?31401; .close = (self: Obj) -> ?31328; .headers = ?Self; .status_code = ?E}), Type_31250: Type, V <: Str, Type_31342 <: Ref(Obj), Type_31316: Type, Type_31101 <: Bool, Type_31364 <: Ref(Obj), Self <: global::Indexable(?K, ?V), Type_31317: Type, Type_31401 <: Structural({._original_response = Never}), K :> Str, Type_31322 <: Structural({.__len__ = (self: Never) -> Nat}), Type_31328: Type|(self: sessions.Session, prepared_request: sessions.Session, response: Type_31591) -> NoneType

.Session: ClassType
sessions = pyimport "sessions"
.Session <: RedirectMixin
.Session.cert: Never
.Session.auth: Never
.Session.proxies: Never
.Session.stream: Never
.Session.params: Never
.Session.adapters: Never
.Session.headers: Never
.Session.verify: Never
.Session.max_redirects: Never
.Session.cookies: Never
.Session.trust_env: Never
.Session.hooks: Never
.Session.__call__: () -> sessions.Session
.Session.__attrs__: global::List!({"params", "stream", "cert", "verify", "proxies", "cookies", "headers", "adapters", "max_redirects", "auth", "hooks", "trust_env"}, 12)
.Session.__enter__: |Type_30485 <: sessions.Session|(self: Type_30485) -> Type_30485
.Session.__exit__: (self: sessions.Session, *args: Obj) -> NoneType
.Session.prepare_request: |Type_31649: Type, Type_31682: Type, Type_31684: Type, Type_31676 <: Ref(Obj), K: Type, Type_30439: Type, Type_31683: Type, Type_31681: Type, T: Type, N: Nat, V: Type, Self <: global::Indexable(?K, ?V), Type_31679: Type, Type_31721 <: global::List(?T, ?N) or ?Self or global::GenericDict, Type_30490 <: Structural({.json = ?31684; .auth = ?Type_30439; .files = ?31682; .data = ?31683; .url = ?31676 and ?31681; .params = ?Type_30439; .cookies = ?31649; .headers = ?Type_30439; .method = ?31679; .hooks = ?31721})|(self: sessions.Session, request: Type_30490) -> Never
.Session.request: |Type_30493 <: Structural({.upper = (self: Obj) -> ?31773}), Type_31776: Type, R :> global::Dict!({?31776: ?31777}), R: Type, O <: Structural({.__or__ = (self: Never, ?R) -> ?O}), O: Type, V: Type, V <: Str, Type_31773: Type, Type_31781: Type, Type_31777: Type, R :> global::Dict!({?31781: ?31782}), Type_31782: Type|(self: sessions.Session, method: Type_30493, url: Obj, params: Structural({.__or__ = (self: Never, R) -> O}) := {None} and Structural({.__or__ = (self: Never, R) -> O}), data: Structural({.__or__ = (self: Never, R) -> O}) := {None} and Structural({.__or__ = (self: Never, R) -> O}), headers: Obj := {None}, cookies: Obj := {None}, files: Obj := {None}, auth: Obj := {None}, timeout: V := {None} and V, allow_redirects: V := {True} and V, proxies: O := {None} and O, hooks: Obj := {None}, stream: Never := Never, verify: Never := Never, cert: Never := Never, json: Obj := {None}) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, V); .status_code = Never})
.Session.get: (self: sessions.Session, url: Obj, **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, {None}); .status_code = Never})
.Session.options: (self: sessions.Session, url: Obj, **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, {None}); .status_code = Never})
.Session.head: (self: sessions.Session, url: Obj, **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, {None}); .status_code = Never})
.Session.post: (self: sessions.Session, url: Obj, data: Structural({.__or__ = (self: Never, Obj) -> Never}) := {None} and Structural({.__or__ = (self: Never, Obj) -> Never}), json: Obj := {None}, **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, {None}); .status_code = Never})
.Session.put: (self: sessions.Session, url: Obj, data: Structural({.__or__ = (self: Never, Obj) -> Never}) := {None} and Structural({.__or__ = (self: Never, Obj) -> Never}), **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, {None}); .status_code = Never})
.Session.patch: (self: sessions.Session, url: Obj, data: Structural({.__or__ = (self: Never, Obj) -> Never}) := {None} and Structural({.__or__ = (self: Never, Obj) -> Never}), **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, {None}); .status_code = Never})
.Session.delete: (self: sessions.Session, url: Obj, **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, {None}); .status_code = Never})
.Session.send: |Type_30458 <: Structural({.url = ?31224; .copy = (self: Obj) -> sessions.Session}), Type_31224 <: Ref(Obj)|(self: sessions.Session, request: Type_30458, **kwargs := Obj) -> Structural({.is_redirect = Bool; .url = Obj; .history = global::List!(Never, _: Nat); .content = Never; .raw = Never; .close = (self: Never) -> Never; .headers = global::Indexable(Obj, Str); .status_code = Never})
.Session.merge_environment_settings: |O <: Structural({.__or__ = (self: Never, ?R) -> ?O}), Type_30439 <: RefMut(Never), Type_30439: Type, O: Type, Type_30439 <: global::Dict!(?D), Type_30439 <: RefMut(?Type_30439), Type_30439 <: RefMut(?Type_30439), R: Type, D: global::GenericDict, Type_30439 <: RefMut(?Type_30439)|(self: sessions.Session, url: Obj, proxies: O, stream: Type_30439, verify: Type_30439, cert: Type_30439) -> global::Dict!({{"proxies"}: Type_30439, {"cert"}: Type_30439, {"verify"}: Type_30439, {"stream"}: Type_30439})
.Session.get_adapter: |Type_32910 <: Structural({.lower = (self: Obj) -> ?33307}), Type_33307: Type|(self: sessions.Session, url: Type_32910) -> Never
.Session.close: (self: sessions.Session) -> NoneType
.Session.mount: |Type_30576 <: Structural({.__len__ = (self: Never) -> Nat})|(self: sessions.Session, prefix: Type_30576, adapter: Obj) -> NoneType
.Session.__getstate__: (self: sessions.Session) -> global::Dict!({Never: Never})
.Session.__setstate__: |Type_30581 <: Structural({.items = (self: Obj) -> ?33380}), Type_33380: Type|(self: sessions.Session, state: Type_30581) -> NoneType

.session: () -> sessions.Session
