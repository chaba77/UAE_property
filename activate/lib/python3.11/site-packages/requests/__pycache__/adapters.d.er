##[pylyzer] failed /home/ether/Desktop/testingThings/realstate/activate/lib/python3.11/site-packages/requests/adapters.py 1753128601 27451

.os: Never

.socket: Never

.typing: Never

.warnings: Never

.___v_desugar_1 = pyimport "exceptions"
.exceptions = pyimport "exceptions"
.ClosedPoolError: Never
.ConnectTimeoutError: Never
.___v_desugar_2 = pyimport "exceptions"

._HTTPError: {exceptions.HTTPError}
.___v_desugar_3 = pyimport "exceptions"

._InvalidHeader: {exceptions.InvalidHeader}
.___v_desugar_4 = pyimport "exceptions"

.LocationValueError: Never
.MaxRetryError: Never
.NewConnectionError: Never
.ProtocolError: Never
.___v_desugar_5 = pyimport "exceptions"

._ProxyError: {exceptions.ProxyError}
.___v_desugar_6 = pyimport "exceptions"

.ReadTimeoutError: Never
.ResponseError: Never
.___v_desugar_7 = pyimport "exceptions"

._SSLError: {exceptions.SSLError}
.___v_desugar_8 = pyimport "poolmanager"
.poolmanager = pyimport "poolmanager"
.PoolManager: {poolmanager.PoolManager}
.proxy_from_url: (url: Str, **kw := Obj) -> poolmanager.ProxyManager
.___v_desugar_9 = pyimport "__init__"
.__init__ = pyimport "__init__"
.TimeoutSauce: {timeout.Timeout}
.___v_desugar_10 = pyimport "__init__"

.parse_url: (url: Str) -> util.url.Url
.___v_desugar_11 = pyimport "retry"
.retry = pyimport "retry"
.Retry: {util.retry.Retry}
.___v_desugar_12 = pyimport "ssl_"
.ssl_ = pyimport "ssl_"
.create_urllib3_context: (ssl_version: NoneType or Int := NoneType or Int, cert_reqs: NoneType or Int := NoneType or Int, options: NoneType or Int := NoneType or Int, ciphers: NoneType or Str := NoneType or Str, ssl_minimum_version: NoneType or Int := NoneType or Int, ssl_maximum_version: NoneType or Int := NoneType or Int, verify_flags: NoneType or Int := NoneType or Int) -> Never
.___v_desugar_13 = pyimport "auth"
.auth = pyimport "auth"
._basic_auth_str: Never
.___v_desugar_14 = pyimport "compat"
.compat = pyimport "compat"
.basestring: global::Tuple([{Str}, {global::Bytes}])
.urlparse: Never
.___v_desugar_15 = pyimport "cookies"
.cookies = pyimport "cookies"
.extract_cookies_to_jar: |Type_27309: Type, Type_27311: Type, Type_26949 <: Structural({.extract_cookies = (self: Obj, ?27309, ?27310) -> ?27311}), Type_27310: Type|(jar: Type_26949, request: Obj, response: Structural({._original_response = Never})) -> Type_27311
.___v_desugar_16 = pyimport "exceptions"

.ConnectionError: {global::ConnectionError}
.ConnectTimeout: {exceptions.ConnectTimeout}
.InvalidHeader: {exceptions.InvalidHeader}
.InvalidProxyURL: {exceptions.InvalidProxyURL}
.InvalidSchema: {exceptions.InvalidSchema}
.InvalidURL: {exceptions.InvalidURL}
.ProxyError: {exceptions.ProxyError}
.ReadTimeout: {exceptions.ReadTimeout}
.RetryError: {exceptions.RetryError}
.SSLError: {exceptions.SSLError}
.___v_desugar_17 = pyimport "models"
.models = pyimport "models"
.Response: Never
.___v_desugar_18 = pyimport "structures"
.structures = pyimport "structures"
.CaseInsensitiveDict: {structures.CaseInsensitiveDict}
.___v_desugar_19 = pyimport "utils"
.utils = pyimport "utils"
.DEFAULT_CA_BUNDLE_PATH: Never
.extract_zipped_paths: Never
.get_auth_from_url: Never
.get_encoding_from_headers: Never
.prepend_scheme_if_needed: Never
.select_proxy: Never
.urldefragauth: Never
.___v_desugar_20 = pyimport "socks"
.socks = pyimport "socks"
.SOCKSProxyManager: {urllib3.contrib.socks.SOCKSProxyManager}



.___v_desugar_21 = pyimport "models"

.PreparedRequest: Never


.DEFAULT_POOLBLOCK: {False}
.DEFAULT_POOLSIZE: {10}
.DEFAULT_RETRIES: {0}
.DEFAULT_POOL_TIMEOUT: {None}
.ssl: Never

._preloaded_ssl_context: Never

._preloaded_ssl_context: Never

._urllib3_request_context: (request: Obj, verify: Obj, client_cert: Obj, poolmanager: poolmanager.PoolManager) -> Never
.BaseAdapter: ClassType
.BaseAdapter.__call__: () -> adapters.BaseAdapter
.BaseAdapter.send: (self: adapters.BaseAdapter, request: Obj, stream: Obj := Obj, timeout: Obj := Obj, verify: Obj := Obj, cert: Obj := Obj, proxies: Obj := Obj) -> NoneType
.BaseAdapter.close: (self: adapters.BaseAdapter) -> NoneType

.HTTPAdapter: ClassType
adapters = pyimport "adapters"
.HTTPAdapter <: .BaseAdapter
.HTTPAdapter.config: Never
.HTTPAdapter._pool_maxsize: Never
.HTTPAdapter.poolmanager: Never
.HTTPAdapter._pool_block: Never
.HTTPAdapter.proxy_manager: Never
.HTTPAdapter._pool_connections: Never
.HTTPAdapter.__call__: (pool_connections: Obj := Obj, pool_maxsize: Obj := Obj, max_retries: Obj := Obj, pool_block: Obj := Obj) -> adapters.HTTPAdapter
.HTTPAdapter.__attrs__: global::List!({"_pool_connections", "config", "max_retries", "_pool_maxsize", "_pool_block"}, 5)
.HTTPAdapter.__getstate__: (self: adapters.HTTPAdapter) -> global::Dict!({Never: Never})
.HTTPAdapter.__setstate__: |Type_29619: Type, Type_27668 <: Structural({.items = (self: Obj) -> ?29619})|(self: adapters.HTTPAdapter, state: Type_27668) -> NoneType
.HTTPAdapter.init_poolmanager: (self: adapters.HTTPAdapter, connections: Obj, maxsize: Obj, block: Obj := Obj, **pool_kwargs := Obj) -> NoneType
.HTTPAdapter.proxy_manager_for: |Type_29693: Type, Type_30140 <: Structural({.lower = (self: Obj) -> ?29693})|(self: adapters.HTTPAdapter, proxy: Type_30140, **proxy_kwargs := Obj) -> Never
.HTTPAdapter.cert_verify: |Type_27688 <: Structural({.ca_cert_dir = ?29748 and ?29758; .ca_certs = ?29747 and ?29757; .cert_file = ?V and ?29789; .cert_reqs = ?29733 and ?29756; .key_file = ?V and ?29790}), Type_29756: Type, Type_29757: Type, V: Type, Type_29747: Type, Type_29790: Type, Type_29789: Type, Type_29758: Type, Type_29733: Type, Type_29748: Type|(self: adapters.HTTPAdapter, conn: Type_27688, url: Structural({.lower = (self: Obj) -> global::Bytes or Str}), verify: Bool, cert: Never) -> NoneType
.HTTPAdapter.build_response: |Type_29842: Type, Type_27693 <: Structural({.url = ?29842 and ?29843}), Type_29843: Type|(self: adapters.HTTPAdapter, req: Type_27693, resp: Structural({._original_response = Never})) -> Never
.HTTPAdapter.build_connection_pool_key_attributes: (self: adapters.HTTPAdapter, request: Obj, verify: Obj, cert: Obj := Obj) -> Never
.HTTPAdapter.get_connection_with_tls_context: |Type_27699 <: Structural({.url = ?29879}), Type_29879 <: Ref(Obj)|(self: adapters.HTTPAdapter, request: Type_27699, verify: Obj, proxies: Obj := Obj, cert: Obj := Obj) -> Never
.HTTPAdapter.get_connection: (self: adapters.HTTPAdapter, url: Obj, proxies: Obj := Obj) -> Never
.HTTPAdapter.close: (self: adapters.HTTPAdapter) -> NoneType
.HTTPAdapter.request_url: |Type_30105 <: Ref(Obj), Type_30104 <: Ref(Obj), Type_27729 <: Structural({.url = ?30104 and ?30105; .path_url = global::Bytes or Str})|(self: adapters.HTTPAdapter, request: Type_27729, proxies: Obj) -> global::Bytes or Str
.HTTPAdapter.add_headers: (self: adapters.HTTPAdapter, request: Obj, **kwargs := Never) -> NoneType
.HTTPAdapter.proxy_headers: |Type_29693: Type, Type_30140 <: Structural({.lower = (self: Obj) -> ?29693})|(self: adapters.HTTPAdapter, proxy: Type_30140) -> global::Dict!({Str: Never})
.HTTPAdapter.send: |Type_30104 <: Ref(Obj), Type_30306: Type, Type_30307: Type, Type_30105 <: Ref(Obj), Type_27733 <: Structural({.body = ?30264 and ?30307; .url = ?Type_30105 and ?Type_30104; .path_url = global::Bytes or Str; .method = ?30306; .headers = ?30265 and ?30308}), Type_30265: Type, Type_30308: Type, Type_30264: Type|(self: adapters.HTTPAdapter, request: Type_27733, stream: Never := Never, timeout: Never := Never, verify: Never := Never, cert: Never := Never, proxies: Never := Never) -> Never

